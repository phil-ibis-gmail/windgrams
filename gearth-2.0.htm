<!DOCTYPE html >
<html>
<head>
<meta name="viewport" content="initial-scale=1.0, user-scalable=no" />
<title>TheWind</title>
<!-- better to put style information inside a single file
it is better to make gradients with css, than with a picture stretched
css3 has border radius things to make rounded corners
-->

<style type="text/css">
  html { height: 100% }
  body { height: 100%; font-family: sans-serif; font-size:100%}
  #map_canvas { height: 100% }
  
  table
  {
    width:20%;
  }
  
  th
  {
    height:150px;
  }
  
  td
  {
    text-align:left;
    vertical-align:center;
  }
  
  .infobox
  {
    font-size:0.875em;
  }

.mapDiv
{
    margin-left:80px;
}


.thumbDiv
{
  
  height: 40px;
  width: 80px;
}

.thumbDiv:hover
{
  color: #449;
  background-color: #aad;
  border-radius: 10px;
}
.thumbDivCenter
{
    text-align:center;
    vertical-align:middle;
}
.thumbTitleDiv
{
  height: 30px;
  overflow: hidden;
}
.thumbTitle
{
  font-weight: bold;
  margin-top: 0;
  margin-bottom: 2px;
  color: #227;
}
.thumbTitle:hover {
  color: #449;
  background-color: #aad;
  text-decoration: none;
}
.thumb
{
  border-radius: 8px;
  -webkit-border-radius: 8px;
  -moz-border-radius: 8px;
}
  
  
</style>

<script type="text/javascript">

  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-27362040-1']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();

</script>

</head>
<body onload="initialize();" onunload="setCookie();">



<script type="text/javascript"
    src="http://maps.googleapis.com/maps/api/js?sensor=false">
</script>

<script type="text/javascript" src="javascript/windgram.js"></script> 


<?php 
    function outputInfoHTML($placename,$lat,$lng,$launch_elevation,$base_elevation,$forecast)
    {
echo<<<EOT
    <div id="$placename-text" style="visibility:hidden;width:0px;height:0px;">
      <div class="infobox" style="width:150px;">
            <b>$placename</b><br />
            elevation: $launch_elevation meters<br />
            $lat,$lng<br />
            <a href="windgram.php?lon=$lng&lat=$lat&elevation=$launch_elevation&placename=$placename&base_elevation=$base_elevation">windgram</a>
            <a href="$forecast">forecast</a><br />
            <a href="http://www-frd.fsl.noaa.gov/mab/soundings/reply-skewt.cgi?data_source=Op40&lon=$lng&lat=$lat&airport=%28none%29&add_hours=0">op40</a>
      
            <!-- bah! the canvas id in here isn't unique, so global searches for something named 'mini' turn up the global instance as part of this div, when 
            in fact, what I want is the one attached to the info window. thus $placename-mini-hidden -->
            </div>
                <canvas id="$placename-mini-hidden" width="100" height="100" style="float:right;" onclick="open_windgram('$placename',$lat,$lng,$launch_elevation,$base_elevation);"></canvas>
            </div>
      </div>
    </div>
EOT;
    }


    include("PlaceDatabase.php");

    echo "<div>";
    echo "<div style=\"width:150px; height:100%; float:left\">";
  
    //echo "<div style=\"position:absolute; left:0px; top:0px;\">";
    echo "<div class=\"thumbDiv\" onclick=\"showHelp();\">Help</div>";
    foreach($places as $place)
    {
        $placename = $place["placename"];
        $base_elevation = $place["base_elevation"];
        echo "<div class=\"thumbDiv\" onclick=\"showKnownPlace('$placename',$base_elevation);\">$placename</div>";
    }
    echo "</div>";
echo<<<RECENTERMAPPOSITION
    <div style="position:relative;">
        <form>
            <input type="text" id="recenterMapPosition" /><span class="thumbDiv" onclick="recenterMap();">Go to lat,lng</span><br />
        </form>
    </div>
RECENTERMAPPOSITION;
    echo "</div>";
    echo "<div id=\"map_canvas\" style=\"width:95%; height:100%; position:absolute; left:100px;\"></div>";
    echo "</div>";   


    foreach($places as $place)
    {
    outputInfoHTML(
        $place["placename"],
        $place["lat"],
        $place["lng"],
        $place["elevation"],
        $place["base_elevation"],
        $place["forecast"]);
    }

    echo "<script type=\"text/javascript\">";
    $length = count($places);
    echo "var places_list = new Array($length);";
    echo "function buildPlacesList() {";
    foreach($places as $place)
    {
        $placename = $place["placename"];
        $lat = $place["lat"];
        $lng = $place["lng"];
        $base_elevation = $place["base_elevation"];
        echo "addKnownPlace('$placename',$base_elevation,$lat,$lng);";
    }
    echo "}";
    echo "</script>";
    
?>
 
 <!-- 

should we have an "export the placenames as kml" option
should launch sites come from a database that people can edit
should we define other things like no-land zones? -- make it a full on database of flying information for the fraser valley?
it would be cool if one could take all the flight paths in existence, and then use that to find the "nearest flight paths" to a launch.

make a graph that shows the difference between forecast and what VE7RVA is outputting. 
-->



<!--div id="map_canvas" class="mapDiv"></div-->


<!-- it is better to not use inline javascript. faster if it is all inside a file
at the end of all the html, because everything else that the javascript will reference
against is already downloaded, etc.-->

<!-- since javascript is downloaded, using long variable names and all that crap makes for
a longer download. -->

<!-- instead of triggering javascript using hte load event, use the DOMContentLoaded event
this can trigger much earlier, because there is no wait for everything else to load -->

<!-- JSON is generally faster than XML. Use Native browser JSON methods. -->
<!-- innerHTML is faster than constructing nodes -->
<!-- setTimeout and setInterval, and lookout for runaway timers -- ones you've forgotten -->

<script type="text/javascript">

var elevator;
var map;
var infowindow = new google.maps.InfoWindow();

var cookiename = "phil_windgram_cookie";  // what stuff is stored as.

function initialize()
{
    // default is to go look at woodside.
    var lat = 49.2436;
    var lng = -121.8874;
    var zoom = 13;
    var maptype = google.maps.MapTypeId.HYBRID;
    
    // check for a cookie, it will have the last lat,lng,zoom we used.
    if (document.cookie.length>0)
    {
        cookieStart = document.cookie.indexOf(cookiename + "=");
        if (cookieStart!=-1)
        {
          cookieStart += cookiename.length+1; 
          cookieEnd=document.cookie.indexOf(";",cookieStart);
          if (cookieEnd==-1)
          {
            cookieEnd=document.cookie.length;
          }
          cookietext = document.cookie.substring(cookieStart,cookieEnd);
          var bits = cookietext.split("|");
          lat = parseFloat(bits[0]);
          lng = parseFloat(bits[1]);
          zoom = parseInt(bits[2]);
        }
     }

    var latlng = new google.maps.LatLng(lat,lng);
    var myOptions = {
      zoom: zoom,
      center: latlng,
      mapTypeId: google.maps.MapTypeId.HYBRID
    };
    
    elevator = new google.maps.ElevationService();
    
    map = new google.maps.Map(document.getElementById("map_canvas"),myOptions);
        
    google.maps.event.addListener(map, 'click', function(event) {placeMarker(event.latLng,map,""); });    

    buildPlacesList();
}

function setCookie() {
        var cookietext = cookiename+"="+map.getCenter().lat()+"|"+map.getCenter().lng()+"|"+map.getZoom();
//        if (expiredays) {
//          var exdate=new Date();
//          exdate.setDate(exdate.getDate()+expiredays);
//          cookietext += ";expires="+exdate.toGMTString();
//        }
        document.cookie=cookietext;
      }

function addKnownPlace(name,base_elevation,lat,lng)
{
    var latlng = new google.maps.LatLng(lat,lng);
    var marker = new google.maps.Marker({position:latlng,map:map});

    google.maps.event.addListener(marker,'click', function(event) {
        map.setCenter(marker.position);
        showKnownPlace(name,base_elevation);
    });
    
    marker.setTitle(name);
    places_list[name] = marker;
}

function showKnownPlace(placename,base_elevation)
{
    var the_place = places_list[placename];
    var lat = the_place.position.lat();
    var lng = the_place.position.lng();
    map.setCenter(the_place.position);
    infowindow.close();
    
    var placename_text = document.getElementById(placename+"-text");
    var launch_elevation=0; // doesn't matter for the mini version
    google.maps.event.addListener(infowindow,'domready', function() {draw_windgram('mini',placename,lat,lng,launch_elevation,base_elevation,'tiny');});
    
    // have to find the canvas that is inside the html I passed in and change its attribute name because otherwise
    // I'll create two canvas with the same id name which leads to it not drawing.
    var tempdiv = document.createElement('div');
    tempdiv.innerHTML = placename_text.innerHTML;
    var canvas_list = tempdiv.getElementsByTagName('canvas');
    var canvas = canvas_list.item(0);
    canvas.setAttribute("id","mini");
    
    infowindow.setContent(tempdiv.innerHTML);
    infowindow.setPosition(the_place.position);
    infowindow.open(map);
}

//function showPlace(name)
//{
//   var the_place = places_list[name];
//    map.setCenter(the_place.position);
//    infowindow.close();
//    showInfoWindow(the_place.position,name);
//}

function placeMarker(location,map,placename) {
  var marker = new google.maps.Marker({
      position: location, 
      map: map
  });

  google.maps.event.addListener(marker,'click', function(event) {
    map.setCenter(marker.position);
    showInfoWindow(event.latLng,placename);
    })
    
    return marker;
}

function open_windgram(placename,lat,lng,elevation,base_elevation)
{
    var windgram_url = "windgram.php?lon="+lng.toFixed(4)+"&lat="+lat.toFixed(4)+"&elevation="+elevation.toFixed()+"&placename="+placename+"&base_elevation="+base_elevation;
    window.location = windgram_url;
}

function showInfoWindow(latlng,placename)
{
 
  // Retrieve the clicked location and push it on the array
  var locations = [];
  var clickedLocation = latlng;
  locations.push(clickedLocation);
  
  // Create a LocationElevationRequest object using the array's one value
  var positionalRequest = {
    'locations': locations
  }

  // Initiate the location request
  elevator.getElevationForLocations(positionalRequest, function(results, status) {
    if (status == google.maps.ElevationStatus.OK) {

      // Retrieve the first results
      if (results[0]) {

        // Open an info window indicating the elevation at the clicked position
        var lng = latlng.lng();
        var lat = latlng.lat();
        var elevation = results[0].elevation;
        var pos=lat.toFixed(4)+","+lng.toFixed(4);
        var op40url = "<a href=http://www-frd.fsl.noaa.gov/mab/soundings/reply-skewt.cgi?data_source=Op40&lon="+lng+"&lat="+lat+"&airport=%28none%29&add_hours=0>op40</a>";
        var windgram = "<a href=windgram.php?lon="+lng.toFixed(4)+"&lat="+lat.toFixed(4)+"&elevation="+elevation.toFixed()+"&placename="+placename+">windgram</a>";
        var title="<br><b>"+placename+"</b></br>";
        //var click="onclick=\"draw_windgram('mini',"+placename+","+lat.toFixed(4)+","+lng.toFixed(4)+","+elevation.toFixed()+",'tiny');\"";
        var click="onclick=\"open_windgram('"+placename+"',"+lat.toFixed(4)+","+lng.toFixed(4)+","+elevation.toFixed()+"0,);\""; // 0 for base elevation
        var canvas="<div style=\"width:150px float:left;\"><canvas id=\"mini\" width=\"100\" height=\"100\" style=\"float:right;\" "+click+"></canvas></div>";
        var elevation="elevation: " + elevation.toFixed() + " meters.</br>";
        google.maps.event.addListener(infowindow,'domready', function() {draw_windgram('mini',placename,lat,lng,elevation,'tiny');});
        
        infowindow.setContent("<div class=\"infobox\" style=\"width:150px;\">"+title+windgram+"<br/>"+elevation+pos+"</br>"+op40url+"</div>"+canvas);
        infowindow.setPosition(clickedLocation);
        infowindow.open(map);
      } else {
        alert("no results in elevation service");
      }
    } else {
      alert("Elevation service failed due to: " + status);
    }
  });

}

  function showHelp()
  {
    window.location="Halp.htm";
    
  }

function recenterMap()
{
//48.1289,-117.4169
    var comma = document.getElementById("recenterMapPosition").value.trim().split(/[\s,]+/);
    if(comma.length > 1)
    {
        var latlng = new google.maps.LatLng(comma[0],comma[1])
        showInfoWindow(latlng,"");
        map.setCenter(latlng);
    }
}

</script>


</body>
</html>
